# Generated by Django 5.2.1 on 2025-05-29 23:11

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('bank_accounts', '0004_bankaccount_is_default'),
        ('categories', '0003_category_unique_category_name'),
        ('credit_cards', '0001_initial'),
        ('users', '0003_alter_profile_created_at_alter_profile_updated_at'),
    ]

    operations = [
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('month', models.SmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MinValueValidator(12)], verbose_name='Month')),
                ('year', models.SmallIntegerField(validators=[django.core.validators.MinValueValidator(2000)], verbose_name='Year')),
                ('amount_paid', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Amount Paid')),
                ('due_date', models.DateField(verbose_name='Due Date')),
                ('paid', models.BooleanField(default=False, verbose_name='Paid')),
                ('credit_card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='credit_cards.creditcard', verbose_name='Credit Card')),
            ],
            options={
                'verbose_name': 'Invoice',
                'verbose_name_plural': 'Invoices',
                'ordering': ['-year', '-month'],
                'unique_together': {('credit_card', 'month', 'year')},
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('description', models.CharField(max_length=255, verbose_name='Description')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01, message='Amount must be positive.')], verbose_name='Amount')),
                ('transaction_date', models.DateField(verbose_name='Transaction Date')),
                ('type', models.CharField(choices=[('expense', 'Despesa'), ('income', 'Receita')], editable=False, max_length=10, verbose_name='Type')),
                ('source_type', models.CharField(choices=[('BANK_ACCOUNT', 'Bank Account'), ('CREDIT_CARD', 'Credit Card')], max_length=20, verbose_name='Source Type')),
                ('is_installment', models.BooleanField(default=False, verbose_name='Is Installment')),
                ('installment_number', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Installment Number')),
                ('total_installments', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Total Installments')),
                ('purchase_group_uuid', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, null=True, verbose_name='Purchase Group UUID')),
                ('original_purchase_description', models.TextField(blank=True, null=True, verbose_name='Original Purchase Description')),
                ('original_transaction_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='Original Transaction ID')),
                ('original_statement_description', models.TextField(blank=True, null=True, verbose_name='Original Statement Description')),
                ('attachment', models.CharField(blank=True, max_length=255, null=True, verbose_name='Attachment URL')),
                ('bank_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='bank_accounts.bankaccount', verbose_name='Bank Account')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='categories.category', verbose_name='Category')),
                ('credit_card', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='credit_cards.creditcard', verbose_name='Credit Card')),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='transactions.invoice', verbose_name='Invoice')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='users.profile', verbose_name='Profile')),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
                'ordering': ['-transaction_date', '-created_at'],
            },
        ),
    ]
